<%- include('./partials/header') %>

<style>
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
  }

  .animate-fade-in {
    animation: fadeIn 0.3s ease-out forwards;
  }

  .animate-shake {
    animation: shake 0.5s ease-in-out;
  }

  .password-strength {
    height: 4px;
    margin-top: 4px;
    border-radius: 2px;
    transition: all 0.3s ease;
  }

  .flash-message {
    animation: fadeIn 0.3s ease-out forwards;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }
</style>

<% if (error.length > 0) { %>
  <div id="flash-message" class="fixed top-5 left-1/2 -translate-x-1/2 p-4 rounded-lg bg-red-500 text-white shadow-lg z-50 flex items-center space-x-2">
    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
    </svg>
    <span><%= error %></span>
  </div>
<% } %>

<% if (success.length > 0) { %>
  <div id="flash-message" class="fixed top-5 left-1/2 -translate-x-1/2 p-4 rounded-lg bg-green-500 text-white shadow-lg z-50 flex items-center space-x-2">
    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
    </svg>
    <span><%= success %></span>
  </div>
<% } %>

<div class="w-full min-h-screen flex items-center justify-center px-4 md:px-20 bg-gradient-to-br from-blue-50 to-blue-100">
  <div class="w-full max-w-md bg-white/80 backdrop-blur-lg p-8 rounded-2xl shadow-xl">
    <div class="text-center mb-8">
      <h4 class="text-3xl font-bold text-gray-800 mb-2">Reset Password</h4>
      <p class="text-gray-600">Please enter your new password below.</p>
    </div>

    <form action="/reset-password" method="POST" onsubmit="return validatePassword()" class="space-y-6">
      <!-- New Password -->
      <div>
        <label for="newPassword" class="block text-sm font-medium text-gray-700 mb-1">New Password</label>
        <div class="relative">
          <input
            type="password"
            id="newPassword"
            name="newPassword"
            class="block bg-white/50 w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-200"
            required
            minlength="8"
            oninput="validatePasswordStrength()"
          />
          <span class="absolute inset-y-0 right-3 flex items-center cursor-pointer" onclick="togglePassword('newPassword')">
            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
            </svg>
          </span>
        </div>
        <div class="password-strength w-full bg-gray-200 mt-2">
          <div id="strength-meter" class="password-strength h-full w-0"></div>
        </div>
        <p id="passwordError" class="text-red-500 text-sm mt-2 hidden flex items-center">
          <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          Password must be at least 8 characters long and contain at least one letter and one number
        </p>
      </div>

      <!-- Confirm New Password -->
      <div>
        <label for="confirmNewPassword" class="block text-sm font-medium text-gray-700 mb-1">Confirm New Password</label>
        <div class="relative">
          <input
            type="password"
            id="confirmNewPassword"
            name="confirmNewPassword"
            class="block bg-white/50 w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-200"
            required
            minlength="8"
          />
          <span class="absolute inset-y-0 right-3 flex items-center cursor-pointer" onclick="togglePassword('confirmNewPassword')">
            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
            </svg>
          </span>
        </div>
        <p id="confirmError" class="text-red-500 text-sm mt-2 hidden flex items-center">
          <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          Passwords do not match
        </p>
      </div>

      <button
        type="submit"
        class="w-full px-5 py-3 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-lg font-semibold shadow-md hover:shadow-lg transform hover:scale-[1.02] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
      >
        Reset Password
      </button>
    </form>
  </div>
</div>

<script>
  function togglePassword(fieldId) {
    const field = document.getElementById(fieldId);
    const icon = field.nextElementSibling.querySelector('svg');
    
    if (field.type === "password") {
      field.type = "text";
      icon.innerHTML = `
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"></path>
      `;
    } else {
      field.type = "password";
      icon.innerHTML = `
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
      `;
    }
  }

  function validatePasswordStrength() {
    const password = document.getElementById('newPassword').value;
    const strengthMeter = document.getElementById('strength-meter');
    const passwordError = document.getElementById('passwordError');
    
    // Check password length and if it contains a number
    const hasNumber = /\d/.test(password);
    const hasLetter = /[a-zA-Z]/.test(password);
    const isValid = password.length >= 8 && hasNumber && hasLetter;
    
    // Update strength meter
    let strength = 0;
    if (password.length > 0) strength += 25;
    if (password.length >= 8) strength += 25;
    if (hasNumber) strength += 25;
    if (hasLetter) strength += 25;
    
    strengthMeter.style.width = strength + '%';
    
    // Set color based on strength
    if (strength < 50) {
      strengthMeter.style.backgroundColor = '#ef4444';
    } else if (strength < 75) {
      strengthMeter.style.backgroundColor = '#f59e0b';
    } else {
      strengthMeter.style.backgroundColor = '#10b981';
    }
    
    // Show/hide error message
    if (password.length > 0 && !isValid) {
      passwordError.classList.remove('hidden');
      passwordError.classList.add('animate-shake');
      setTimeout(() => passwordError.classList.remove('animate-shake'), 500);
    } else {
      passwordError.classList.add('hidden');
    }
  }

  function validatePassword() {
    const newPassword = document.getElementById('newPassword').value;
    const confirmNewPassword = document.getElementById('confirmNewPassword').value;
    const confirmError = document.getElementById('confirmError');
    const passwordError = document.getElementById('passwordError');
    
    // Check password strength
    const hasNumber = /\d/.test(newPassword);
    const hasLetter = /[a-zA-Z]/.test(newPassword);
    const isStrong = newPassword.length >= 8 && hasNumber && hasLetter;
    
    if (!isStrong) {
      passwordError.classList.remove('hidden');
      passwordError.classList.add('animate-shake');
      setTimeout(() => passwordError.classList.remove('animate-shake'), 500);
      return false;
    }
    
    // Check if passwords match
    if (newPassword !== confirmNewPassword) {
      confirmError.classList.remove('hidden');
      confirmError.classList.add('animate-shake');
      setTimeout(() => confirmError.classList.remove('animate-shake'), 500);
      return false;
    }
    
    return true;
  }

  // Auto-hide flash messages after 5 seconds
  setTimeout(() => {
    const flashMessages = document.querySelectorAll('#flash-message');
    flashMessages.forEach(message => {
      message.style.opacity = '0';
      message.style.transform = 'translateY(-10px)';
      message.style.transition = 'all 0.3s ease-out';
      setTimeout(() => message.remove(), 300);
    });
  }, 5000);
</script>

<%- include('./partials/footer') %>